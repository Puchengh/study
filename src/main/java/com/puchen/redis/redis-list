String : java中的字符串
hash : java中的一个bean对象
list : java语言中的linkedList类型

赋值语法
lpush l1 a b c d e f   赋值操作  将一个或者多个值插入到列表头部（从左侧添加）
rpush l2 a b c d e f   赋值操作  将一个或者多个值插入到列表尾部（从右侧添加）
lpushx key value   将一个值插入到已存在的列表头部，如果列表不在，操作无效
rpushx key calue   将一个值插入到已存在的列表尾部，如果列表不在，操作无效

取值语法
llen key   获取到列表的长度
lrange l1 0 -1  取值 从开始到结束，0表示一个元素，-1表示左后一个元素，-2表示倒数第二个元素，以此类推
lindex key index   通过索引获取表中的元素

删除语法
lpop key  移除最左侧的一个元素
rpop key  移除最右侧的一个元素
blpop key [key2] timeout  移除并获取列表的第一个元素，如果列表中没有元素会阻塞列表知道等待超时或者发现可弹出元素位置
brpop key [key2] timeout  移除并获取列表的最后一个元素，如果列表中没有元素会阻塞列表知道等待超时或者发现可弹出元素位置
ltrim key start stop   修剪  删除其余的元素

修改语法
lset key index value 通过索引设置列表元素的值
linsert key before|after pivot value  在列表的某个值前面或者后面加入某个元素

应用场景：1.数据量大的集合数据删减  2.任务队列
        1.列表数据显示，关注列表，粉丝列表，留言评价等，分页，热点新闻（top5）等
            利用lrange还可以很方便的实现分页的功能，在博客系统中，每篇破文的评论也可以存入一个单独的list中

rpoplpush source destination  移除列表的最后一个元素，并将该元素添加到另一个列表并返回

rpoplpush a1 a2 -->a1的最后的元素移到a2的左侧
rpoplpush a1 a1 -->循环列表，将最后元素移到最左侧

brpoplpush source destination timeout   从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它，
                                        如果列表中没有元素会阻塞列表知道等待超时或者发现可弹出元素为止

**********************************************************************************************************
任务队列
    list通常用来实现一个消息队列，而且可以确保先后顺序，不必讲mysql那样还需要通过order by来进行排序
    $$任务队列介绍
        在处理web客户端发送的命令请求的时候，某些操作的执行时间可能会比我们预期的更长一些，通过将待执行任务的相关
        信息放入队列里面，并在之后对队列进行处理，用户可以推迟执行那些需要一段时间才能完成的操作，这种将工作交给
        任务处理器来执行的做法被称为任务队列
    常用案例：订单系统的下单流程，用户系统登录注册短信等





