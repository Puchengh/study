step步骤
一个步骤有以下特性：
    1步骤需要有一个名字，这个名字在转换范围内唯一
    2每个步骤都会读，写数据行（唯一例外是"生成记录"步骤，该步骤只写数据）
    3步骤将数据写到与之项链的一个或者多个输出跳，在传送到跳的另一端的步骤。
    4大多数的步骤可以有多个输出跳，一个步骤的数据发送可以被设置为分发和复制，
        分发是目标步骤轮流接受记录，复制是所有的记录被同事发送到所有的目标步骤。

hop跳
跳就是步骤之间带箭头的连线，跳定义了步骤之间的数据通道
跳实际上是两个步骤之间的称之为行集的数据航缓存（行集的大小可以在转换的设置里定义）
    当行集满了，向行集写数据的步骤将停止写入，知道行集里又有了空间
    当行集空了，从行集读取数据的步骤停止读取，直到行集又有可读的数据行。

数据行-数据类型
    数据以数据行的形式沿着步骤移动，一个数据行是零到多个字段的集合，字段包含下面几种数据类型
    1 String:字符型数据
    2 Number:双精度浮点型（64位）
    3 Integer:带符号长整形（64）位
    4 BigBumber:任意精度数据
    5 Date:带毫秒精度的日期时间值
    6 Boolean：取值为true和false的布尔值
    7 Binary：二进制字段可以包含图像，声音，视频以及其他类型的二进制数据

数据行-元数据
    每个步骤在输出数据行时都有对字段的描述，这种描述就是数据行的元数据
    通常包含下面一些信息
    1 名称：行里的字段名应用是唯一的
    2 数据类型： 字段的数据类型
    3 格式： 数据显示的方式 如Integerde #、0.00
    4 长度： 字符串的长度或者BigBumber类型的长度
    5 精度： BigBumber数据类型的十进制精度
    6 货币符号： ￥
    7 小数点符号： 十进制数据的小数点格式，不同文化背景下小数点符号是不同的，一般是点（.）或者都好（，）
    8 分组符号： 数值类型数据的分组符号，不同文化背景下数据里的分组符号也是不同的，一般是（.）或逗号（，）或者单引号（'）

并行
    跳的这种基于行集缓存的规则允许每个步骤都是由一个独立的线程运行，这种并发程度最高。
    这一规则也允许数据以最小消耗内存的数据流的方式来处理，在数据仓库里，我们经常要处理大量的数据，所以这种并发
    低消耗内存的方式也是ETL工具的核心需求。

    对于kettle的转换，不可能定义一个执行顺序，因为所有步骤都以并发方式执行，当转换启动后，所有步骤都同时启动，
    从他们的输入跳中读取数据，并把处理过的数据写入输入跳，知道输入跳里不再有数据，就终止步骤的运行，当所有的
    步骤都终止了，整个转换就终止了（要与数据流向区分开）

