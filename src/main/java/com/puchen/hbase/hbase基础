hbase的存储和架构
hbase的特点
    面向列的nosql数据库
    nosql--no sql  不支持标准的sql
         --not sql  不仅仅支持sql   phoenix-->基于hbase之上提供标准sql的

  特点：
    1）不支持复杂的事务（acid）  只支持行级链接
    2）不支持夺标join   想要做多表join使用hive
    3）hbase数据库中的存储格式：byte类型的数组   byte[]  可以存储半结构化或者非结构化
    4）主要用于存储结构化或者半结构化（快速查询，近实时）数据（HTML XML）  查询性能较高
    5）hbase无模式
    mysql是一个写模式数据：写数据的时候进行校验
    hive是一个读模式的数据库：读数据的时候进行校验
    hbase是一个无严格模式数据库
    hbase中的数据最终存储在hdfs上  上层的数据计算依赖mapreduce
  hbase存储的表的特点：
    1）数据量大  底层存储在HDFS上  理论上存储数据无上限  千亿级别的数据  分布式存储
    2）面向列存储
        关系型数据库   面向行存储的 一行的数据可定存储在同一个文件中
        hbase  面向列存储的数据库   一列（列簇）存储一个文件
        优点：提升查询性能 减少IO 同一列数据类型一般相同，压缩比更大
    3）稀疏
        关系型数据库中大量的null值存储的时候占用存储空间
        #存储的结构上:hbase中null值不占用存储空间
        #列对应关系上来说：有的字段就插入数据 没有此列的就不用管
  HBase的相关概念:
  行键：rowkey：一行数据的标志  类似于mysql数据库中的id
  不同行的rowkey肯定不同  行标志  相同的rowKey肯定是同一行
  1）在hbase中行键不宜过大  通常10-100byte   16个字节最好  涉及到存储问题
        每个列簇的物理文件都会存储一个rowKey
  2）hbase中存储的时候默认会按照rowkey的字典顺序进行升序排序（）
            （字典顺序） 1  12  14  2  23  4
  列簇：包含一个或者多个列
    通常情况下一个标中的列簇个数不要超过3个
    列簇是hbase存储的物理切分单位   面向列簇的  实际存储的时候会（每个列簇存储一个文件）
    ##具有相同IO特性  通常情况下会一起访问的列
        查个人信息的时候 name--age--sex--phoneNum 经常一起查出来
        基友相同IO特性的会放在同一个列簇中，如果一个标中的字段特别多，IO特性也特别多，将不同的IO特性强制分到一个列簇中
        最好控制列簇不超过三个  实际生产中一个
  列簇存储的越多  存储的文件个数越多，增加扫描成本，没有严格的表结构
  列：数据插入的时候 指定的列名 列的值
  时间戳：在数据进行插入的时候  没插入一条数据就会自动生成一个时间戳  时间戳的作用就是用于记录数据的版本
        habse中可以存储多个版本的数据  多个版本之间靠时间戳记录的
        时间戳默认就是系统时间  时间戳  也可以进行手动指定  timestamp=1562035402684
  单元格：cell  某一行数据的某一列的某一个值
  定义一个单元格需要哪些：行键+列簇+时间戳

  在hbase中对数据查询的三种方式：
  1）全表扫描 效率低
  2）通过rowkey  范围查询  指定查询某一rowkey范围内的数据
  3）查询单个rowkey的数据


HBase的架构和存储：
    寻址路径存在zookeeper中
    主从架构   HMaster HRegionServer
    用于管理region的
    region:HBase在行方向上的逻辑切分概念（逻辑切分  要是目的是便于查询建索引）
    一个HBase在最开始的时候只有一个region  面向行的  在每个region中主要是按照列簇存储的
    随着数据的增加  region会进行分裂  分裂的时候依然按照行方向进行分裂  取中间
    主要目的：便于查询  建立索引
    region分裂大小文件：逻辑上的大小
        0.9中 256M
        1.X中 10G
